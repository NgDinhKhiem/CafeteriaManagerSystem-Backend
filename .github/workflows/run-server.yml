name: Run CafeteriaManagerSystem Backend with Ngrok

on:
  workflow_dispatch:  # Manual trigger
  release:
    types: [published]  # Auto-run on release

jobs:
  run-backend:
    runs-on: ubuntu-latest
    timeout-minutes: 125  # Safety margin over 120 mins

    env:
      NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      NGROK_DOMAIN: ${{ secrets.NGROK_DOMAIN }}

    steps:
      - name: Create working directory
        run: mkdir -p app

      - name: Download JAR and JSON files
        working-directory: ./app
        run: |
          curl -L -o CafeteriaManagerSystem-Backend-1.0-SNAPSHOT.jar https://github.com/NgDinhKhiem/CafeteriaManagerSystem-Backend/releases/download/v1.0.0/CafeteriaManagerSystem-Backend-1.0-SNAPSHOT.jar
          curl -L -o data.json https://github.com/NgDinhKhiem/CafeteriaManagerSystem-Backend/releases/download/v1.0.0/data.json
          curl -L -o production-data.json https://github.com/NgDinhKhiem/CafeteriaManagerSystem-Backend/releases/download/v1.0.0/production-data.json

      - name: Start Backend JAR
        working-directory: ./app
        run: |
          nohup java -Xmx512M -Xms256M -jar CafeteriaManagerSystem-Backend-1.0-SNAPSHOT.jar > backend.log 2>&1 &

      - name: Wait for server to start
        run: sleep 15

      - name: Install and configure ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok -y

          ngrok config add-authtoken "$NGROK_AUTHTOKEN"
          nohup ngrok http --domain="$NGROK_DOMAIN" 8080 > ngrok.log 2>&1 &

      - name: Wait for ngrok tunnel
        run: sleep 10

      - name: POST /test through ngrok public URL
        run: |
          echo "Sending POST request to https://${NGROK_DOMAIN}/test"
          RESPONSE=$(curl -s -o response.txt -w "%{http_code}" -X POST https://${NGROK_DOMAIN}/test \
            -H "Content-Type: application/json" \
            -d '{"fileText":"your text"}')

          echo "Response Code: $RESPONSE"
          echo "Response Body:"
          cat response.txt

          if [ "$RESPONSE" -ne 200 ]; then
            echo "POST request failed with status $RESPONSE"
            exit 1
          fi

      - name: Keep the server running for 2 hours
        run: |
          echo "Server and ngrok tunnel running at https://${NGROK_DOMAIN}"
          echo "Keeping alive for 2 hours..."
          sleep 7200

      - name: View backend logs (on completion or failure)
        if: always()
        run: |
          echo "=== Backend Logs ==="
          cat app/backend.log || echo "No backend log found"
          echo "=== Ngrok Logs ==="
          cat ngrok.log || echo "No ngrok log found"
