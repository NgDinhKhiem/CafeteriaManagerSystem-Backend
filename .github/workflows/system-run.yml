name: BACKEND-SERVER

on:
  workflow_dispatch:  # Manual trigger
  release:
    types: [published]  # Auto-run on release

jobs:
  run-java-backend:
    name: Run CafeteriaManagerSystem Java Backend
    runs-on: self-hosted
    timeout-minutes: 1440

    env:
      AUTH_DATABASE: SUPABASE
      PRODUCT_DATABASE: SUPABASE
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      NGROK_DOMAIN: ${{ secrets.NGROK_DOMAIN }}

    steps:
      - name: Set up app directory
        run: mkdir -p app

      - name: Download JAR file
        working-directory: ./app
        run: |
          curl -L -o CafeteriaManagerSystem.jar https://github.com/NgDinhKhiem/CafeteriaManagerSystem-Backend/releases/download/v1.0.0/CafeteriaManagementSystem.jar

      - name: Create .env file
        working-directory: ./app
        run: |
          [ -f .env ] && rm .env
          echo "AUTH_DATABASE=${AUTH_DATABASE}" >> .env
          echo "PRODUCT_DATABASE=${PRODUCT_DATABASE}" >> .env
          echo "SUPABASE_URL=${SUPABASE_URL}" >> .env
          echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}" >> .env
          echo ".env file created:"
          cat .env

      - name: Confirm .env exists before starting
        working-directory: ./app
        run: |
          if [ ! -f .env ]; then
            echo "ERROR: .env not found"
            exit 1
          fi
      
      - name: Start Java Backend
        working-directory: ./app
        run: |
          nohup java -Xmx512M -Xms256M -jar CafeteriaManagerSystem.jar > backend-java.log 2>&1 &

      - name: Wait for Java server to start
        run: sleep 5

      - name: Stream Java backend logs
        run: |
          echo "Streaming Java backend logs..."
          timeout 86400 tail -f app/backend-java.log | tee java-live.log
